quarkus.native.native-image-xms=8g
# Quarkus HTTP Configuration
quarkus.http.port=${PORT:8081}
quarkus.http.host=0.0.0.0
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
# Quarkus Datasource Configuration
quarkus.datasource.db-kind=postgresql
# Database connection configuration - works for both local and Railway
quarkus.datasource.username=${PGUSER:postgres}
quarkus.datasource.password=${PGPASSWORD:transactions_pass}
quarkus.datasource.reactive.url=postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:transactions_db}
quarkus.datasource.jdbc.url=jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:transactions_db}
# Quarkus Hibernate ORM Configuration
quarkus.hibernate-orm.database.generation=validate
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.format-sql=true
# Connection pool settings (optional)
quarkus.datasource.reactive.max-size=20
quarkus.datasource.reactive.idle-timeout=PT10M
# Quarkus Micrometer Configuration
quarkus.micrometer.export.prometheus.enabled=true
# Logging configuration
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.console.color=false
quarkus.banner.enabled=false
quarkus.log.category."io.quarkus.hibernate".level=DEBUG
quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=TRACE
# Application Specific Configuration
application.mcp.server.name=Transactions Management Server
application.mcp.server.version=1.0.0
application.mcp.server.description=Reactive transaction management with CRUD operations
application.mcp.tools.validation.enabled=true
# MCP Server Configuration
quarkus.mcp.server.traffic-logging.enabled=true
quarkus.mcp.server.traffic-logging.text-limit=1000
# Liquibase Configuration
quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.change-log=db/migration/db.changelog-master.yaml
quarkus.liquibase.clean-at-start=false
quarkus.liquibase.validate-on-migrate=true
# OpenAPI Configuration
quarkus.smallrye-openapi.info-title=Transactions Management API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=Reactive transaction management system with CRUD operations for transactions
quarkus.smallrye-openapi.info-contact-email=support@transactions.com
quarkus.smallrye-openapi.info-license-name=MIT
quarkus.smallrye-openapi.servers=http://localhost:8081
quarkus.swagger-ui.always-include=true
# Generate OpenAPI spec during build
quarkus.smallrye-openapi.store-schema-directory=target/generated-sources/openapi
# Cache Configuration for Stock Prices
quarkus.cache.caffeine.stock-prices.initial-capacity=100
quarkus.cache.caffeine.stock-prices.maximum-size=1000
quarkus.cache.caffeine.stock-prices.expire-after-write=PT30M
quarkus.cache.caffeine.stock-prices.metrics-enabled=true
# Cache Configuration for Dividends
quarkus.cache.caffeine.dividends.initial-capacity=100
quarkus.cache.caffeine.dividends.maximum-size=1000
quarkus.cache.caffeine.dividends.expire-after-write=P15D
quarkus.cache.caffeine.dividends.metrics-enabled=true
# Kafka configuration
kafka.bootstrap.servers=${KAFKA_SERVER:localhost:9092}
mp.messaging.outgoing.transaction-create.connector=smallrye-kafka
mp.messaging.outgoing.transaction-create.topic=transactions
quarkus.messaging.auto-connector-attachment=false
mp.messaging.outgoing.transaction-create.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
# Redis configuration
quarkus.redis.hosts=${REDIS_SERVER:redis://localhost:6379}
quarkus.redis.timeout=10s
quarkus.redis.max-pool-size=20
quarkus.redis.max-pool-waiting=50